# SZABLON: Ten plik zawiera zasady bez zdefiniowanych klawiszy. Przed użyciem w spectra_lexer, należy go przetworzyć skryptem generuj_slownik.py
{
  # Definicje nagłosów - lewa strona
  # Na podstawie onsets-slovik.ods
  # TODO: JĘZYK: Dać przykłady w info, por. samogłoski poniżej
  "b.":    ["XP",   "b",    "", "", "lewe B"],
  "c.":    ["ZT",   "c",    "", "", "lewe C"],
  "ci.":   ["ZTI",  "ci",   "", "", "lewe CI"],
  "cj.":   ["ZTJ",  "cj",   "", "", "lewe CJ"],
  "cz.":   ["PV",   "cz",   "", "", "lewe CZ"],
  "ć.":    ["TJ",   "ć",    "", "", "lewe Ć"],
  "d.":    ["XT",   "d",    "", "", "lewe D"],
  "dz.":   ["XZT",  "dz",   "", "", "lewe DZ"],
  "dzi.":  ["XZTJ", "dzi",  "", "", "lewe DZI"],
  "dź.":   ["ZTJ",  "dź",   "", "REFERENCE", "lewe DŹ"],
  "dż.":   ["XPV",  "dż",   "", "", "lewe DŻ"],
  "f.":    ["F",    "f",    "", "", "lewe F"],
  "g.":    ["XK",   "g",    "", "", "lewe G"],
  "h.":    ["XKT",  "h",    "", "", "lewe H"],
  "ch.":   ["KT",   "ch",   "", "", "lewe CH"],
  "j.":    ["J",    "j",    "", "", "lewe J"],
  "k.":    ["K",    "k",    "", "", "lewe K"],
  "l.":    ["L",    "l",    "", "", "lewe L"],
  "ł.":    ["LJ",   "ł",    "", "", "lewe Ł"],
  "m.":    ["TV",   "m",    "", "", "lewe M"],
  "n.":    ["LR",   "n",    "", "", "lewe N"],
  "p.":    ["P",    "p",    "", "", "lewe P"],
  "r.":    ["R",    "r",    "", "", "lewe R"],
  "s.":    ["S",    "s",    "", "", "lewe S"],
  "sz.":   ["TP",   "sz",   "", "", "lewe SZ"],
  "szcz.": ["TPV",  "szcz", "", "", "lewe SZCZ"],
  "ś.":    ["XSJ",  "ś",    "", "", "lewe Ś"],
  "si.":   ["SJ",   "si",   "", "", "lewe SI"],
  "sj.":   ["SJ~",  "sj",   "", "", "lewe SJ"],
  "śc.":   ["ZST",  "śc",   "", "", "lewe ŚC"],
  "ści.":  ["ZSTJ", "ści",  "", "", "lewe ŚCI"],
  "t.":    ["T",    "t",    "", "", "lewe T"],
  "w.":    ["V",    "w",    "", "", "lewe W"],
  "x.":    ["SK",   "x",    "", "", "lewe X"],
  "z.":    ["Z",    "z",    "", "", "lewe Z"],
  "ź.":    ["ZI",   "ź",    "", "", "lewe Ź"],
  "zi.":   ["ZJ",   "zi",   "", "", "lewe ZI"],
  "zj.":   ["ZJ~",  "zj",   "", "", "lewe ZJ"],
  "ździ.": ["ZST",  "ździ", "", "REFERENCE", "lewe ŹDZI"],
  "rz.":   ["RJ",   "rz",   "", "", "lewe RZ"],

  # # Standard rules - right side
  # ".f":   ["-F",    "f",      "",    "",     "right side F"],
  # ".ff":  ["-F",    "ff",     "",    "",     "right side F"],
  # ".gh":  ["-F",    "gh",     "",    "",     "phonetic F (TUF → tough)"],
  # ".ph":  ["-F",    "ph",     "",    "",     "`ph`onetic F"],
  # ".v":   ["-F",    "v",      "V",   "",     "can be `v`"],
  # ".s.":  ["-F",    "s",      "S",   "",     "used as `s` when necessary to preserve steno order"],
  # ".ss.": ["-F",    "ss",     "S",   "",     "used as `s` when necessary to preserve steno order"],
  # "!c!":  ["-F",    "c",      "S",   "",     "used as soft `c` when necessary to preserve steno order"],
  # ".z.":  ["-F",    "z",      "Z",   "",     "used as `z` when necessary to preserve steno order"],

  # ".v+":  ["*F",    "v",      "V",   "",     "right side V; used in case of conflict with -F"],

  # ".r":   ["-R",    "r",      "",    "",     "right side R"],
  # ".rr":  ["-R",    "rr",     "",    "",     "right side R"],
  # ".ar":  ["-R",    "a(.r)",  "",    "",     "drop unstressed vowel"],
  # ".er":  ["-R",    "e(.r)",  "",    "",     "drop unstressed vowel"],
  # ".or":  ["-R",    "o(.r)",  "",    "",     "drop unstressed vowel"],

  # ".p":   ["-P",    "p",      "",    "",     "right side P"],
  # ".pp":  ["-P",    "pp",     "",    "",     "right side P"],

  # ".b":   ["-B",    "b",      "",    "",     "right side B"],
  # ".bb":  ["-B",    "bb",     "",    "",     "right side B"],

  # ".l":   ["-L",    "l",      "",    "",     "right side L"],
  # ".ll":  ["-L",    "ll",     "",    "",     "right side L"],
  # ".ly":  ["-L",    "ly",     "LY",  "",     "common suffix -ly; must not conflict with other words using -L (SHROEL → slowly)"],
  # ".al":  ["-L",    "a(.l)",  "",    "",     "drop unstressed vowel"],
  # ".el":  ["-L",    "e(.l)",  "",    "",     "drop unstressed vowel"],

  # ".g":   ["-G",    "g",      "",    "",     "right side G"],
  # ".gg":  ["-G",    "gg",     "",    "",     "right side G"],
  # ".ing": ["-G",    "ing",    "ING", "",     "suffix -ing; must not conflict with other words using -G"],
  # ".j+":  ["-G",    "j",      "J",   "RARE", "used as `j` in ending combinations when necessary"],
  # ".gue": ["-G",    "(.g)ue", "",    "",     "`ue` is silent"],

  # ".t":   ["-T",    "t",      "",    "",     "right side T"],
  # ".tt":  ["-T",    "tt",     "",    "",     "right side T"],
  # ".ty":  ["-T",    "ty",     "TY",  "",     "common suffix -ty; must not conflict with other words using -T (ABLT → ability)"],
  # ".ght": ["-T",    "gh(.t)", "",    "",     "`gh` is silent"],

  # ".s":   ["-S",    "s",      "",    "",     "right side S"],
  # ".ss":  ["-S",    "ss",     "",    "",     "right side S"],
  # "!c":   ["-S",    "c",      "",    "",     "can be soft `c`"],
  # "+z":   ["-S",    "z",      "",    "",     "phonetic S"],
  # ".es":  ["-S",    "e(.s)",  "",    "",     "drop unstressed vowel"],

  # ".d":   ["-D",    "d",      "",    "",     "right side D"],
  # ".dd":  ["-D",    "dd",     "",    "",     "right side D"],
  # ".ed":  ["-D",    "e(.d)",  "",    "",     "drop unstressed vowel"],

  # ".z":   ["-Z",    "z",      "",    "",     "right side Z"],
  # ".zz":  ["-Z",    "zz",     "",    "",     "right side Z"],
  # ".s+":  ["-Z",    "s",      "",    "",     "can be `s` to make strokes easier"],

  # ".n":   ["-PB",   "n",      "N",   "",     "right side N"],
  # ".nn":  ["-PB",   "nn",     "N",   "",     "right side N"],
  # ".gn":  ["-PB",   "g(.n)",  "",    "",     "`g` is silent"],

  # ".m":   ["-PL",   "m",      "M",   "",     "right side M"],
  # ".mm":  ["-PL",   "mm",     "M",   "",     "right side M"],

  # ".k":   ["-BG",   "k",      "K",   "",     "right side K"],
  # ".c":   ["-BG",   "c",      "K",   "",     "K can be hard `c`"],
  # ".cc":  ["-BG",   "cc",     "K",   "",     "K can be hard `c`"],
  # ".ck":  ["-BG",   "ck",     "K",   "",     "phonetic K"],
  # "+ch":  ["-BG",   "ch",     "K",   "",     "phonetic K"],
  # ".q":   ["-BG",   "q",      "K",   "",     "K can be `q`"],
  # ".que": ["-BG",   "(.q)ue", "",    "",     "`ue` is silent"],

  # ".x":   ["-BGS",  "x",      "X",   "",     "right side X"],
  # "+cc":  ["-BGS",  "cc",     "X",   "",     "phonetic X"],

  # ".j":   ["-PBLG", "j",      "J",   "",     "right side J"],
  # "!g":   ["-PBLG", "g",      "J",   "",     "J can be soft `g`"],
  # ".dj":  ["-PBLG", "d(.j)",  "",    "",     "merged consonant sounds"],
  # ".dg":  ["-PBLG", "d(!g)",  "",    "",     "merged consonant sounds"],

  # ".ch":  ["-FP",   "ch",     "CH",  "",     "right side CH"],
  # ".cc.": ["-FP",   "cc",     "CH",  "",     "phonetic CH (Italian)"],
  # "+t":   ["-FP",   "t",      "CH",  "RARE", "phonetic CH (TPHAFP/RAL → natural)"],
  # ".tch": ["-FP",   "t(.ch)", "",    "",     "merged consonant sounds"],

  # ".sh":  ["-RB",   "sh",     "SH",  "",     "right side SH"],
  # ".sch": ["-RB",   "sch",    "SH",  "",     "phonetic SH"],
  # "+ss":  ["-RB",   "ss",     "SH",  "",     "phonetic SH (TPEURB/UR → fissure)"],
  # "*c":   ["-RB",   "c",      "SH",  "RARE", "phonetic SH"],
  # "*s":   ["-RB",   "s",      "SH",  "RARE", "phonetic SH"],
  # "*t":   ["-RB",   "t",      "SH",  "RARE", "phonetic SH"],

  # ".th":  ["*T",    "th",     "TH",  "",     "right side TH"],

  # ".st":  ["*S",    "st",     "ST",  "",     "right side ST; used in case of conflict with -FT"],

  # ".mp":  ["*PL",   "mp",     "MP",  "",     "right side MP; deprecated in favor of -FRP by certain parties"],

  # ".m.":  ["-FR",   "m",      "M",   "RARE", "middle M; used only in combinations (KAFRP → camp)"],

  # ".rv":  ["-FRB",  "rv",     "RV",  "",     "the RV sound (KUFRB → curve)"],

  # "*nk":  ["*PBG",  "nk",     "NK",  "",     "the NK sound; overlap of N and K"],
  # "*nc":  ["*PBG",  "nc",     "NK",  "",     "the NK sound; overlap of N and K"],

  # ".nk":  ["-PBG",  "nk",     "NK",  "",     "the NK sound (no asterisk)"],
  # ".nc":  ["-PBG",  "nc",     "NK",  "",     "the NK sound (no asterisk)"],

  # "*lk":  ["*LG",   "lk",     "LK",  "",     "the LK sound (H*ULG → hulk)"],
  # "*lc":  ["*LG",   "lc",     "LK",  "",     "the LK sound"],

  # ".lk":  ["-LG",   "lk",     "LK",  "",     "the LK sound (no asterisk)"],
  # ".lc":  ["-LG",   "lc",     "LK",  "",     "the LK sound (no asterisk)"],
  # ".lch": ["-LG",   "lch",    "LCH", "",     "the LCH sound (PHULG → mulch)"],

  # ".rch": ["-FRPB", "rch",    "RCH", "",     "the RCH sound"],
  # ".nch": ["-FRPB", "nch",    "NCH", "",     "the NCH sound"],
  # ".nt.": ["-FRPB", "nt",     "NCH", "",     "the NCH sound"],

  # "+nch":    ["-FRPBLG", "nch",    "NCH",   "", "the NCH sound; disambiguates vs. RCH (HRUFRPBLG → lunch)"],
  # "+nt.":    ["-FRPBLG", "nt",     "NCH",   "", "the NCH sound; disambiguates vs. RCH"],

  # ".cean":   ["-GS",     "cean",   "SHUN",  "", "the SHUN sound"],
  # ".cian":   ["-GS",     "cian",   "SHUN",  "", "the SHUN sound"],
  # ".cion":   ["-GS",     "cion",   "SHUN",  "", "the SHUN sound"],
  # ".sian":   ["-GS",     "sian",   "SHUN",  "", "the SHUN sound"],
  # ".sion":   ["-GS",     "sion",   "SHUN",  "", "the SHUN sound"],
  # ".tian":   ["-GS",     "tian",   "SHUN",  "", "the SHUN sound"],
  # ".tion":   ["-GS",     "tion",   "SHUN",  "", "the SHUN sound"],
  # ".gion":   ["-GS",     "gion",   "JEN",   "", "the JEN sound"],

  # ".ction":  ["-BGS",    "ction",  "KSHUN", "", "the KSHUN sound; overlap of K and SHUN"],
  # ".cation": ["-BGS",    "cation", "KSHUN", "", "the KSHUN sound; overlap of K and SHUN"],
  # ".xion":   ["-BGS",    "xion",   "KSHUN", "", "the KSHUN sound; overlap of K and SHUN"],

  # ".ction+": ["*BGS",    "ction",  "KSHUN", "", "the KSHUN sound; asterisk disambiguates vs. X when necessary"],

  # Definicje głosów (samogłosek) - środek
  # Na podstawie samogloski.ods:JEIAU-mid
  "j":  ["J",   "j" , "", "REFERENCE", "zmiękczające/uższypiające: siaki, szyk, spiek"],
  "e":  ["E",   "e" , "", "", "`e` jak `bela`"],
  "i":  ["I",   "i" , "", "", "`i` jak `bila`"],
  # TODO: JĘZYK: Dostosować info dla pozostałych samogłosek
  "a":  ["A",   "a" , "", "", "bal"],
  "u":  ["U",   "u" , "", "", ""],
  "ó":  ["U",   "ó" , "", "REFERENCE", "ból"],
  "o":  ["AU",  "o" , "", "", "bok"],
  "ę":  ["EI",  "ę" , "", "", "pęk, wejście"],
  "ą":  ["IA",  "ą" , "", "", "wąski, ojczyzna"],
  "y":  ["EU",  "y" , "", "", "pysk"],
  "ia": ["JA",  "ia", "", "DUPLICATE", "piach, płachta, wszak"],
  "ja": ["JA",  "ja", "", "DUPLICATE", ""],
  "ya": ["JA",  "ya", "", "DUPLICATE", ""],
  "ie": ["JE",  "ie", "", "DUPLICATE", "piec, chłeptać, wrzeszczeć, szelak"],
  "je": ["JE",  "je", "", "DUPLICATE", ""],
  "ye": ["JE",  "ye", "", "DUPLICATE", ""],
  "io": ["JAU", "io", "", "DUPLICATE", "piosenka, chłop, wrzos, szok"],
  "jo": ["JAU", "jo", "", "DUPLICATE", ""],
  "yo": ["JAU", "yo", "", "DUPLICATE", ""],
  "iu": ["JU",  "iu", "", "DUPLICATE", "miód, przód, wrzód"],
  "ju": ["JU",  "ju", "", "DUPLICATE", ""],
  "yu": ["JU",  "yu", "", "DUPLICATE", ""],
  "ió": ["JU",  "ió", "", "DUPLICATE", ""],
  "jó": ["JU",  "jó", "", "DUPLICATE", ""],
  "yó": ["JU",  "yó", "", "DUPLICATE", ""],
  "ii": ["JI",  "ii", "", "DUPLICATE", "Jidysz?, szyk, łyk, nik + ew. końcówki: żmii, frezji, spacji"],
  "ji": ["JI",  "ji", "", "DUPLICATE", ""],
  "yi": ["JI",  "yi", "", "DUPLICATE", ""],
  "jy": ["JI",  "jy", "", "DUPLICATE", ""],
  "ię": ["JEI", "ię", "", "DUPLICATE", "pięść, rzęsa, łęgi"],
  "ję": ["JEI", "ję", "", "DUPLICATE", ""],
  "yę": ["JEI", "yę", "", "DUPLICATE", ""],
  "ią": ["JIA", "ią", "", "DUPLICATE", "piąstki, łąka, jojczyć, ijon, kijowska, poi,"],
  "ją": ["JIA", "ją", "", "DUPLICATE", ""],
  "yą": ["JIA", "yą", "", "DUPLICATE", ""],

  # # Orthographic rules - vowels
  # "oo":  ["AO", "oo", "OO", "",     "spelling of `oo` is always AO"],
  # "oa*": ["AO", "oa", "",   "",     "spelling of `oa` is AO for vowel sound conflicts"],
  # "a_e": ["AE", "a",  "",   "RARE", "spelling of `a_e` is AE for vowel sound conflicts with `ai`"],
  # "ei*": ["AE", "ei", "",   "",     "spelling of `ei` is AE for vowel sound conflicts with `ai` (WAET → weight)"],
  # "ea*": ["AE", "ea", "",   "",     "spelling of `ea` is AE for vowel sound conflicts"],
  # "o*+": ["AU", "o",  "",   "",     "`o` may be AU when used in certain prefixes"],

  # # Left side H compounds
  # "cK~": ["K",  "c",          "C", "REFERENCE", "used as C in CH sound."],
  # "ch.": ["KH", "(cK~)(h.)",  "",  "",          "left side CH"],
  # "H~":  ["H",  "-",          "H", "REFERENCE", "sound with no written letter"],
  # "c.+": ["KH", "(cK~)(|H~)", "",  "RARE",      "phonetic CH"],
  # "tK~": ["K",  "t",          "C", "REFERENCE", "used as C in CH sound."],
  # "t.+": ["KH", "(tK~)(|H~)", "",  "RARE",      "phonetic CH"],
  # "sh.": ["SH", "(s.)(h.)",   "",  "",          "left side SH"],
  # "c.!": ["SH", "(c!)(|H~)",  "",  "RARE",      "phonetic SH"],
  # "s.+": ["SH", "(s.)(|H~)",  "",  "RARE",      "phonetic SH"],
  # "ti~": ["S",  "ti",         "",  "REFERENCE", "left side S in SH sound."],
  # "ti.": ["SH", "(ti~)(|H~)", "",  "RARE",      "phonetic SH"],
  # "th.": ["TH", "(t.)(h.)",   "",  "",          "left side TH"],

  # # Folds and inversions
  # "dis.":  ["STK",   "(d.)i(s.)",  "", "INVERSION", "s/d inversion"],
  # "des.":  ["STK",   "(d.)e(s.)",  "", "INVERSION", "s/d inversion"],
  # "dec.":  ["STK",   "(d.)e(c!)",  "", "INVERSION", "c/d inversion"],
  # "ins.":  ["STPH",  "(in.)(s.)",  "", "INVERSION", "s/n inversion (STPHERT → insert)"],
  # "inc.":  ["STPH",  "(in.)(c!)",  "", "INVERSION", "c/n inversion"],
  # "bes.":  ["SPW",   "(b.)e(s.)",  "", "INVERSION", "s/b inversion"],
  # "mis.":  ["SPH",   "(m.)i(s.)",  "", "INVERSION", "s/m inversion"],
  # "io":    ["OEU",   "(i)(o)",     "", "INVERSION", "i/o inversion"],
  # ".rf":   ["-FR",   "(.r)(.f)",   "", "INVERSION", "f/r inversion"],
  # ".rph":  ["-FR",   "(.r)(.ph)",  "", "INVERSION", "f/r inversion"],
  # ".rs":   ["-FR",   "(.r)(.s.)",  "", "INVERSION", "s/r inversion"],
  # ".nf":   ["-FPB",  "(.n)(.f)",   "", "INVERSION", "f/n inversion"],
  # ".nv":   ["-FPB",  "(.n)(.v)",   "", "INVERSION", "f/n inversion"],
  # ".mph":  ["-FPL",  "(.m)(.ph)",  "", "INVERSION", "f/m inversion"],
  # ".lf":   ["-FL",   "(.l)(.f)",   "", "INVERSION", "f/l inversion"],
  # ".lph":  ["-FL",   "(.l)(.ph)",  "", "INVERSION", "f/l inversion"],
  # ".lv":   ["-FL",   "(.l)(.v)",   "", "INVERSION", "f/l inversion"],
  # ".tl":   ["-LT",   "(.t)(.l)",   "", "INVERSION", "l/t inversion"],
  # ".tal":  ["-LT",   "(.t)a(.l)",  "", "INVERSION", "l/t inversion"],
  # ".tel":  ["-LT",   "(.t)e(.l)",  "", "INVERSION", "l/t inversion"],
  # ".pr":   ["-RP",   "(.p)(.r)",   "", "INVERSION", "r/p inversion"],
  # ".br":   ["-RB",   "(.b)(.r)",   "", "INVERSION", "r/b inversion"],
  # ".cr":   ["-RBG",  "(.c)(.r)",   "", "INVERSION", "r/c inversion"],
  # ".kr":   ["-RBG",  "(.k)(.r)",   "", "INVERSION", "r/k inversion"],
  # ".xtr":  ["-RBGS", "(.x)t(.r)",  "", "INVERSION", "r/x inversion"],
  # ".gr":   ["-RG",   "(.g)(.r)",   "", "INVERSION", "r/g inversion"],
  # ".tr":   ["-RT",   "(.t)(.r)",   "", "INVERSION", "r/t inversion"],
  # ".dr":   ["-RD",   "(.d)(.r)",   "", "INVERSION", "r/d inversion"],
  # ".mar":  ["-RPL",  "(.m)(.ar)",  "", "INVERSION", "-ar suffix fold"],
  # ".mer":  ["-RPL",  "(.m)(.er)",  "", "INVERSION", "-er suffix fold"],
  # ".ner":  ["-RPB",  "(.n)(.er)",  "", "INVERSION", "-er suffix fold"],
  # ".ber":  ["-RB",   "(.b)(.er)",  "", "INVERSION", "-er suffix fold"],
  # ".ker":  ["-RBG",  "(.k)(.er)",  "", "INVERSION", "-er suffix fold"],
  # ".ler":  ["-RL",   "(.l)(.er)",  "", "INVERSION", "-er suffix fold"],
  # ".ter":  ["-RT",   "(.t)(.er)",  "", "INVERSION", "-er suffix fold"],
  # ".ser":  ["-RS",   "(.s)(.er)",  "", "INVERSION", "-er suffix fold"],
  # ".cer":  ["-RS",   "(!c)(.er)",  "", "INVERSION", "-er suffix fold"],
  # ".der":  ["-RD",   "(.d)(.er)",  "", "INVERSION", "-er suffix fold"],
  # ".cher": ["-FRP",  "(.ch)(.er)", "", "INVERSION", "-er suffix fold"],
  # ".gly":  ["-LG",   "(.g)(.ly)",  "", "INVERSION", "-ly suffix fold"],
  # ".tly":  ["-LT",   "(.t)(.ly)",  "", "INVERSION", "-ly suffix fold"],
  # ".tely": ["-LT",   "(.t)e(.ly)", "", "INVERSION", "-ly suffix fold"],
  # ".sly":  ["-LS",   "(.s)(.ly)",  "", "INVERSION", "-ly suffix fold"],
  # ".sely": ["-LS",   "(.s)e(.ly)", "", "INVERSION", "-ly suffix fold"],
  # ".cely": ["-LS",   "(!c)e(.ly)", "", "INVERSION", "-ly suffix fold"],
  # ".dly":  ["-LD",   "(.d)(.ly)",  "", "INVERSION", "-ly suffix fold"],
  # ".ting": ["-GT",   "(.t)(.ing)", "", "INVERSION", "-ing suffix fold"],
  # ".sing": ["-GS",   "(.s)(.ing)", "", "INVERSION", "-ing suffix fold"],
  # ".ding": ["-GD",   "(.d)(.ing)", "", "INVERSION", "-ing suffix fold"],

  # "~y":    ["E",     "y",          "", "REFERENCE", "E can be -y in suffix folds"],
  # ".dy":   ["ED",    "(.d)(~y)",   "", "INVERSION", "-y suffix fold using E"],
  # ".ddy":  ["ED",    "(.dd)(~y)",  "", "INVERSION", "-y suffix fold using E"],
  # ".lly":  ["EL",    "(.ll)(~y)",  "", "INVERSION", "-y suffix fold using E"],
  # ".cy":   ["ES",    "(!c)(~y)",   "", "INVERSION", "-y suffix fold using E"],
  # ".ry":   ["ER",    "(.r)(~y)",   "", "INVERSION", "-y suffix fold using E"],
  # ".rry":  ["ER",    "(.rr)(~y)",  "", "INVERSION", "-y suffix fold using E"],
  # ".ry+":  ["EUR",   "(.r)(y)",    "", "INVERSION", "-y suffix fold"],

  # # Rules for letters that are split or slurred between multiple strokes
  # "~/~":    ["/",          "",                 "",  "REFERENCE", "split stroke separator"],
  # "b/b":    ["-B/PW",      "(.b)(~/~)(|b.)",   "",  "SPLIT",     "consonant `b` split between strokes"],
  # "c/c":    ["-BG/K",      "(.c)(~/~)(|c.)",   "",  "SPLIT",     "hard `c` split between strokes"],
  # "!c/c!":  ["-S/S",       "(!c)(~/~)(|c!)",   "",  "SPLIT",     "soft `c` split between strokes"],
  # "ch/ch":  ["-FP/KH",     "(.ch)(~/~)(|ch.)", "",  "SPLIT",     "`ch` split between strokes"],
  # "d/d":    ["-D/TK",      "(.d)(~/~)(|d.)",   "",  "SPLIT",     "consonant `d` split between strokes"],
  # "f/f":    ["-F/TP",      "(.f)(~/~)(|f.)",   "",  "SPLIT",     "consonant `f` split between strokes"],
  # "g/g":    ["-G/TKPW",    "(.g)(~/~)(|g.)",   "",  "SPLIT",     "hard `g` split between strokes"],
  # "!g/g!":  ["-PBLG/SKWR", "(!g)(~/~)(|g!)",   "",  "SPLIT",     "soft `g` split between strokes"],
  # "i/i":    ["EU/KWR",     "(i)(~/~)(|i.)",    "",  "SPLIT",     "short vowel `i` slurred between strokes"],
  # "i!/i":   ["AOEU/KWR",   "(i!)(~/~)(|i.)",   "",  "SPLIT",     "long vowel `i` slurred between strokes"],
  # "j/j":    ["-PBLG/SKWR", "(.j)(~/~)(|j.)",   "",  "SPLIT",     "consonant `j` split between strokes"],
  # "k/k":    ["-BG/K",      "(.k)(~/~)(|k.)",   "",  "SPLIT",     "consonant `k` split between strokes"],
  # "l/l":    ["-L/HR",      "(.l)(~/~)(|l.)",   "",  "SPLIT",     "consonant `l` split between strokes"],
  # "m/m":    ["-PL/PH",     "(.m)(~/~)(|m.)",   "",  "SPLIT",     "consonant `m` split between strokes"],
  # "n/n":    ["-PB/TPH",    "(.n)(~/~)(|n.)",   "",  "SPLIT",     "consonant `n` split between strokes"],
  # "p/p":    ["-P/P",       "(.p)(~/~)(|p.)",   "",  "SPLIT",     "consonant `p` split between strokes"],
  # "q/q":    ["-BG/K",      "(.q)(~/~)(|q.)",   "",  "SPLIT",     "consonant `q` split between strokes"],
  # "r/r":    ["-R/R",       "(.r)(~/~)(|r.)",   "",  "SPLIT",     "consonant `r` split between strokes"],
  # "s/s":    ["-S/S",       "(.s)(~/~)(|s.)",   "",  "SPLIT",     "consonant `s` split between strokes"],
  # "s+/s":   ["-Z/S",       "(.s+)(~/~)(|s.)",  "",  "SPLIT",     "consonant `s` split between strokes"],
  # "sh/sh":  ["-RB/SH",     "(.sh)(~/~)(|sh.)", "",  "SPLIT",     "`sh` split between strokes"],
  # "t/t":    ["-T/T",       "(.t)(~/~)(|t.)",   "",  "SPLIT",     "consonant `t` split between strokes"],
  # "th/th":  ["*T/TH",      "(.th)(~/~)(|th.)", "",  "SPLIT",     "`th` split between strokes"],
  # "v/v":    ["-F/SR",      "(.v)(~/~)(|v.)",   "",  "SPLIT",     "consonant `v` split between strokes"],
  # "~xK":    ["-BG",        "x",                "K", "REFERENCE", "K sound in `x`"],
  # "xk/":    ["-BG/S",      "(~xK)(~/~)(|s.)",  "",  "SPLIT",     "`x` slurred into next stroke"],
  # "xk/c!":  ["-BG/S",      "(~xK)(~/~)(c!)",   "",  "SPLIT",     "`x` slurred into `c` in next stroke"],
  # "xk/s":   ["-BG/S",      "(~xK)(~/~)(s.)",   "",  "SPLIT",     "`x` slurred into `s` in next stroke"],
  # "x/s":    ["-BGS/S",     "(.x)(~/~)(|s.)",   "",  "SPLIT",     "consonant `x` split between strokes"],
  # "x/x":    ["-BGS/KP",    "(.x)(~/~)(|x.)",   "",  "SPLIT",     "consonant `x` split between strokes"],
  # "z/s":    ["-Z/S",       "(.z)(~/~)(|s.)",   "",  "SPLIT",     "consonant `z` split between strokes"],
  # "z/z":    ["-Z/S*",      "(.z)(~/~)(|z.)",   "",  "SPLIT",     "consonant `z` split between strokes"],
  # "~Tz":    ["-T",         "z",                "",  "REFERENCE", "T sound in Italian `zz`"],
  # "zz+":    ["-T/S",       "(~Tz)(~/~)(z+)",   "",  "SPLIT",     "Italian `zz` split between strokes"],

  # # Modifier combos
  # "SKWR:PS":  ["SKWR",  "", "...", "RARE",   "uncommon prefix/suffix modifier"],
  # "-RBGS:PS": ["-RBGS", "", "...", "RARE",   "uncommon prefix modifier"],
  # "KWR:PS":   ["KWR",   "", "...", "RARE",   "connects multiple strokes"],
  # "A*U:PS":   ["A*U",   "", "SP",  "STROKE", "suffix stroke to indicate international spelling variant"],
  # "TK-LS:PS": ["TK-LS", "", "",    "STROKE", "infix stroke to connect words (Don't Leave Space)"],

  # # Miscellaneous special cases
  # "uY~":    ["KWR",   "u",             "Y",    "REFERENCE", "phonetic Y"],
  # "ua.":    ["KWRA",  "(uY~)(a)",      "",     "",          "`u` has phonetic Y onset"],
  # "W~":     ["W",     "-",             "W",    "REFERENCE", "sound with no written letter"],
  # "on.":    ["WUPB",  "(|W~)(o+)(.n)", "",     "",          "unique WUN sound as in `one` and `once`"],
  # #"kno.":   ["TPHOE", "(kn.)(o!)",     "",     "",          "disambiguation from `no`"],
  # #"~ea":    ["E",     "ea",            "",     "REFERENCE", "special case for `eav`"],
  # #".eav":   ["EF",    "(~ea)(.v)",     "",     "",          "disambiguation from `eaf`"],
  # "~ie":    ["E",     "ie",            "",     "REFERENCE", "special case for `iev`"],
  # ".iev":   ["EF",    "(~ie)(.v)",     "",     "",          "disambiguation from `ief`"],
  # "~ou":    ["AU",    "ou",            "",     "REFERENCE", "special case for suffix -ought"],
  # ".ought": ["AUT",   "(~ou)(.ght)",   "",     "",          "unique AUT sound as in `thought`"],
  # "~gJ":    ["-G",    "g",             "J",    "REFERENCE", "may have J sound in certain combinations"],
  # ".logy":  ["-LG",   "(.l)o(~gJ)y",   "",     "",          "suffix where `g` has J sound"],
  # ".kly":   ["-LG",   "kly",           "KLY",  "",          "special case for suffix -ly after `k`"],
  # ".king":  ["-G",    "king",          "KING", "",          "special case for suffix -ing after `k`"],
  # "~xG":    ["-G",    "x",             "X",    "REFERENCE", "special case for suffix -xt"],
  # ".xt":    ["-GT",   "(~xG)(.t)",     "",      "",         "disambiguation from `kets`"],
  # ".ght+":  ["-GT",   "ght",           "T",     "",         "disambiguation from `t` or `te` ending"],
  # ".xed":   ["-BGD",  "(~xK)e(.d)",    "",      "",         "treat `x` as `k` to avoid -SD combo (PLEUBGD → mixed)"],
  # "~dT":    ["-T",    "d",             "D",    "REFERENCE", "may be used for first of two `d`s (standard?) (SKWRAEUTD → jaded)"],
  # ".ded":   ["-TD",   "(~dT)e(.d)",    "",      "",         "special case for ending with two separate `d`s"],
  # ".zz.":   ["-TS",   "(~Tz)(+z)",     "",      "",         "phonetic TS (Italian)"],

  # # Compound rules - these are optional, but help accuracy
  # "sc.":    ["SK",     "(s.)(c.)",         "", "", "also applies to soft `sc` words such as `science`"],
  # "sch.":   ["SH",     "(s.)c(h.)",        "", "", "merged consonant sounds"],
  # "enter.": ["SPWR",   "(ent.)e(r.)",      "", "", "ONLY works as prefix"],
  # "inter.": ["SPWR",   "(int.)e(r.)",      "", "", "ONLY works as prefix"],
  # "exp.":   ["SP",     "(ex+)(p.)",        "", "", "slurred short form of `exp`"],
  # "comp.":  ["KP",     "(com.)(p.)",       "", "", "usually overrides `ex` in conflicts (KPABGT → compact)"],
  # "qu.":    ["KW",     "(q.)(u.)",         "", "", "phonetic KW"],
  # "off-":   ["AUF",    "(o*+)(.ff)",       "", "", "prefix with alternate vowels"],
  # "con-":   ["KAUPB",  "(c.)(o*+)(.n)",    "", "", "prefix with alternate vowels"],
  # "for-":   ["TPAUR",  "(f.)(o*+)(.r)",    "", "", "prefix with alternate vowels"],
  # "over-":  ["AUFR",   "(o*+)(.v)e(.r)",   "", "", "prefix with alternate vowels"],
  # "under-": ["UPBD",   "(u)(.n)(.d)er",    "", "", "standalone prefix stroke"],
  # "ex-":    ["EBGS",   "(e)(.x)",          "", "", "standalone prefix stroke"],
  # "extra-": ["ERBGS",  "(e)(.xtr)a",       "", "", "standalone prefix stroke"],
  # ".ous":   ["OUS",    "(o)(u)(.s)",       "", "", "suffix with separate vowels"],
  # ".cial":  ["-RBL",   "(*c)ia(.l)",       "", "", "drop unstressed vowels"],
  # ".sual":  ["-RBL",   "(*s)ua(.l)",       "", "", "drop unstressed vowels"],
  # ".tial":  ["-RBL",   "(*t)ia(.l)",       "", "", "drop unstressed vowels"],
  # ".cious": ["-RBS",   "(*c)iou(.s)",      "", "", "drop unstressed vowels"],
  # ".sious": ["-RBS",   "(*s)iou(.s)",      "", "", "drop unstressed vowels"],
  # ".tious": ["-RBS",   "(*t)iou(.s)",      "", "", "drop unstressed vowels"],
  # "-ful":   ["-FL",    "(.f)u(.l)",        "", "", "drop unstressed vowel"],
  # ".full":  ["-FL",    "(.f)u(.ll)",       "", "", "drop unstressed vowel"],
  # "-less":  ["-LS",    "(.l)e(.ss)",       "", "", "drop unstressed vowel"],
  # "-ness":  ["-PBS",   "(.n)e(.ss)",       "", "", "drop unstressed vowel"],
  # ".ment":  ["-PLT",   "(.m)en(.t)",       "", "", "drop middle"],
  # "-a":     ["KWRA",   "(KWR:PS)(a)",      "", "", "standalone suffix stroke"],
  # "-y":     ["KWREU",  "(KWR:PS)(y)",      "", "", "standalone suffix stroke"],
  # "-ial":   ["KWRAL",  "(i.)(a)(.l)",      "", "", "standalone suffix stroke"],
  # "-ian":   ["KWRAPB", "(i.)(a)(.n)",      "", "", "standalone suffix stroke"],
  # "-ier":   ["KWRER",  "(i.)(e)(.r)",      "", "", "standalone suffix stroke"],
  # "-ion":   ["KWROPB", "(i.)(o)(.n)",      "", "", "standalone suffix stroke"],
  # "-ly":    ["HREU",   "(l.)(y)",          "", "", "standalone suffix stroke"],
  # "-ry":    ["REU",    "(r.)(y)",          "", "", "standalone suffix stroke"],
  # "-ary":   ["AER",    "(a)(.ry)",         "", "", "standalone suffix stroke"],
  # "-ally":  ["AEL",    "(a)(.lly)",        "", "", "standalone suffix stroke"],
  # "-ual":   ["WAL",    "(u.)(a)(.l)",      "", "", "standalone suffix stroke"],
  # "-ually": ["WAEL",   "(u.)(a)(.lly)",    "", "", "standalone suffix stroke"],
  # "-tory":  ["TOER",   "(t.)(o)(.ry)",     "", "", "standalone suffix stroke"],
  # "-able":  ["-BL",    "a(.b)(.l)e",       "", "", "standalone suffix stroke"],
  # "-ability": ["-BLT", "a(.b)i(.l)i(.ty)", "", "", "standalone suffix stroke"],

  # # Specific shortenings used in the most common words
  # "you.":   ["U",      "you",              "", "", "prefix `you` in common compound words"],
  # "some.":  ["S",      "some",             "", "", "prefix `some` in common compound words"],
  # ".ever":  ["-FR",    "e(.v)e(.r)",       "", "", "suffix `ever` in common compound words"],
  # #".one":   ["-PB",    "o(.n)e",           "", "", "suffix `one` in common compound words"],
  # ".body":  ["-B",     "body",             "", "", "suffix `body` in common compound words"],
  # ".thing": ["-G",     "th(.ing)",         "", "", "suffix `thing` in common compound words"],
  # ".self":  ["*S",     "self",             "", "", "suffix `self` in common pronouns"],
  # ".day":   ["-D",     "day",              "", "", "suffix `day` in common compound words"],

  # # Common briefs, especially those that may form phrases or otherwise screw with the lexer
  # "is":     ["S",      "is",             "", "WORD", "common brief"],
  # "and":    ["SKP",    "and",            "", "WORD", "`and` - purely positional brief; no dependencies on other rules"],
  # "just":   ["SKWR",   "(j.)ust",        "", "WORD", "common brief"],
  # "have":   ["SR",     "ha(v.)e",        "", "WORD", "common brief"],
  # "it":     ["T",      "it",             "", "WORD", "common brief"],
  # "did":    ["TK",     "(d.)id",         "", "WORD", "common brief"],
  # "go":     ["TKPW",   "(g.)o",          "", "WORD", "common brief"],
  # "if":     ["TP",     "i(f.)",          "", "WORD", "common brief"],
  # "in":     ["TPH",    "i(n.)",          "", "WORD", "common brief"],
  # "from":   ["TPR",    "(f.)(r.)om",     "", "WORD", "common brief"],
  # "this":   ["TH",     "(t.)(h.)is",     "", "WORD", "common brief"],
  # "there":  ["THR",    "(t.)(h.)e(r.)e", "", "WORD", "common brief"],
  # "can":    ["K",      "can",            "", "WORD", "common brief"],
  # "why":    ["KWR",    "wh(y.)",         "", "WORD", "common brief"],
  # "about":  ["PW",     "a(b.)out",       "", "WORD", "common brief"],
  # "with":   ["W",      "with",           "", "WORD", "common brief"],
  # "had":    ["H",      "had",            "", "WORD", "common brief"],
  # "will":   ["HR",     "wi(ll.)",        "", "WORD", "common brief"],
  # "are":    ["R",      "are",            "", "WORD", "common brief"],
  # "of":     ["-F",     "of",             "", "WORD", "common brief"],
  # "ever":   ["-FR",    "e(.v)e(.r)",     "", "WORD", "common brief"],
  # "was":    ["-FS",    "was",            "", "WORD", "`was` - purely positional brief; no dependencies on other rules"],
  # "are+":   ["-R",     "are",            "", "WORD", "common brief"],
  # "an":     ["-PB",    "a(.n)",          "", "WORD", "common brief"],
  # "be":     ["-B",     "be",             "", "WORD", "common brief"],
  # "the":    ["-T",     "the",            "", "WORD", "common brief"],
  # "he":     ["E",      "he",             "", "WORD", "common brief"],
  # "you":    ["U",      "you",            "", "WORD", "common brief"],
  # "very":   ["SRE",    "(v.)(e)ry",      "", "WORD", "common brief"],
  # "for":    ["TP-R",   "(f.)o(.r)",      "", "WORD", "common brief"],
  # "they":   ["THE",    "(t.)(h.)(e)y",   "", "WORD", "common brief"],
  # "were":   ["W-R",    "(w.)e(.r)e",     "", "WORD", "common brief"],

  # Główne zasady dla literowania
  "~LIT": ["*",   "",  "*", "REFERENCE", "używaj z klawiszami po lewej i samogłoskami żeby literować"],
  "~ALT": ["~",   "",  "",  "REFERENCE", "wybierz drugą literę o tym brzmieniu"],
  "~DUŻ": ["-L",  "",  "↑", "REFERENCE", "używaj żeby literować wielkimi literami"],

  # Ponieważ `ń` nie może się pojawić przed samogłoską, musi mieć inną definicję po lewej
  "ń~":   ["LRJ", "ń", "",  "REFERENCE", "podstawa literowania dla `ń`"],
  # TODO: JĘZYK: Jak literować `q` i `v`?
  "q~":   ["K~",  "q", "",  "REFERENCE", "podstawa literowania dla `q`"],
  "v~":   ["V~",  "v", "",  "REFERENCE", "podstawa literowania dla `v`"],

  # małe litery - muszą pasować do całego akordu (stroke) żeby nie pomylić ich z innymi zasadami
  "a*": ["", "(a)(~LIT)",  "", "STROKE", "literowanie: `a`"],
  "ą*": ["", "(ą)(~LIT)",  "", "STROKE", "literowanie: `ą`"],
  "b*": ["", "(b.)(~LIT)", "", "STROKE", "literowanie: `b`"],
  "c*": ["", "(c.)(~LIT)", "", "STROKE", "literowanie: `c`"],
  "ć*": ["", "(ć.)(~LIT)", "", "STROKE", "literowanie: `ć`"],
  "d*": ["", "(d.)(~LIT)", "", "STROKE", "literowanie: `d`"],
  "e*": ["", "(e)(~LIT)",  "", "STROKE", "literowanie: `e`"],
  "ę*": ["", "(ę)(~LIT)",  "", "STROKE", "literowanie: `ę`"],
  "f*": ["", "(f.)(~LIT)", "", "STROKE", "literowanie: `f`"],
  "g*": ["", "(g.)(~LIT)", "", "STROKE", "literowanie: `g`"],
  "h*": ["", "(h.)(~LIT)", "", "STROKE", "literowanie: `h`"],
  "i*": ["", "(i)(~LIT)",  "", "STROKE", "literowanie: `i`"],
  "j*": ["", "(j)(~LIT)",  "", "STROKE", "literowanie: `j`"],
  "k*": ["", "(k.)(~LIT)", "", "STROKE", "literowanie: `k`"],
  "l*": ["", "(l.)(~LIT)", "", "STROKE", "literowanie: `l`"],
  "ł*": ["", "(ł.)(~LIT)", "", "STROKE", "literowanie: `ł`"],
  "m*": ["", "(m.)(~LIT)", "", "STROKE", "literowanie: `m`"],
  "n*": ["", "(n.)(~LIT)", "", "STROKE", "literowanie: `n`"],
  "ń*": ["", "(ń~)(~LIT)", "", "STROKE", "literowanie: `ń`"],
  "o*": ["", "(o)(~LIT)",  "", "STROKE", "literowanie: `o`"],
  "ó*": ["", "(ó)(~LIT)(~ALT)",  "", "STROKE", "literowanie: `ó`"],
  "p*": ["", "(p.)(~LIT)", "", "STROKE", "literowanie: `p`"],
  "q*": ["", "(q~)(~LIT)", "", "STROKE", "literowanie: `q`"],
  "r*": ["", "(r.)(~LIT)", "", "STROKE", "literowanie: `r`"],
  "s*": ["", "(s.)(~LIT)", "", "STROKE", "literowanie: `s`"],
  "ś*": ["", "(ś.)(~LIT)", "", "STROKE", "literowanie: `ś`"],
  "t*": ["", "(t.)(~LIT)", "", "STROKE", "literowanie: `t`"],
  "u*": ["", "(u)(~LIT)",  "", "STROKE", "literowanie: `u`"],
  "v*": ["", "(v~)(~LIT)", "", "STROKE", "literowanie: `v`"],
  "w*": ["", "(w.)(~LIT)", "", "STROKE", "literowanie: `w`"],
  "x*": ["", "(x.)(~LIT)", "", "STROKE", "literowanie: `x`"],
  "y*": ["", "(y)(~LIT)",  "", "STROKE", "literowanie: `y`"],
  "z*": ["", "(z.)(~LIT)", "", "STROKE", "literowanie: `z`"],
  # TODO: JĘZYK: Jak literować `ż`?
  "ż*": ["", "(rz.)(~LIT)", "", "STROKE", "literowanie: `ż`"],
  "ź*": ["", "(ź.)(~LIT)", "", "STROKE", "literowanie: `ź`"],

  # Duże litery
  "A*": ["", "(a*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `A`"],
  "Ą*": ["", "(ą*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Ą`"],
  "B*": ["", "(b*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `B`"],
  "C*": ["", "(c*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `C`"],
  "Ć*": ["", "(ć*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Ć`"],
  "D*": ["", "(d*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `D`"],
  "E*": ["", "(e*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `E`"],
  "Ę*": ["", "(ę*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Ę`"],
  "F*": ["", "(f*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `F`"],
  "G*": ["", "(g*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `G`"],
  "H*": ["", "(h*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `H`"],
  "I*": ["", "(i*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `K`"],
  "L*": ["", "(l*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `L`"],
  "Ł*": ["", "(ł*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Ł`"],
  "M*": ["", "(m*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `M`"],
  "N*": ["", "(n*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `N`"],
  "Ń*": ["", "(ń*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Ń`"],
  "O*": ["", "(o*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `O`"],
  "Ó*": ["", "(ó*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Ó`"],
  "P*": ["", "(p*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `P`"],
  "Q*": ["", "(q*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Q`"],
  "R*": ["", "(r*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `R`"],
  "S*": ["", "(s*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `S`"],
  "Ś*": ["", "(ś*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Ś`"],
  "T*": ["", "(t*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `T`"],
  "U*": ["", "(u*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `U`"],
  "V*": ["", "(v*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `V`"],
  "W*": ["", "(w*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `W`"],
  "X*": ["", "(x*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `X`"],
  "Y*": ["", "(y*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Y`"],
  "Z*": ["", "(z*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Z`"],
  "Ż*": ["", "(ż*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Ż`"],
  "Ź*": ["", "(ź*)(~DUŻ)", "", "STROKE UPPERCASE", "literowanie: `Ź`"],

  # Symbole
  "-":   ["L-LB",      "-",       "",  "",       "- (minus)"],
  # TODO: Zarezerwuj żeby EAU nie było wykorzystane w samogłoskach
  "/":   ["EAU",       "/",       "",  "",       "/ (ukośnik)"],
  # # TODO: Symbole od tego miejsca
  # "'":   ["AE",        "'",       "",  "",       "' (apostrophe)"],
  # "-'s": ["AES",       "(')(.s)", "",  "",       "possessive suffix `'s`"],
  # ".":   ["-FPLT",     ".",       "",  "",       ". (period)"],
  # ",":   ["-RBGS",     ",",       "",  "",       ", (comma)"],
  # "?":   ["KWEZ",      "?",       "",  "",       "? (question mark)"],
  # "!":   ["SKHRAPL",   "!",       "",  "",       "! (exclamation mark)"],
  # "-.":  ["TP-PL",     ".",       "",  "STROKE", "ending . (period)"],
  # "-,":  ["KW-BG",     ",",       "",  "STROKE", "ending , (comma)"],
  # "-?":  ["KW-PL",     "?",       "",  "STROKE", "ending ? (question mark)"],
  # "-!":  ["TP-BG",     "!",       "",  "STROKE", "ending ! (exclamation mark)"],
  # "'-":  ["SKW-T",     "'",       "",  "STROKE", "starting ' (single quote)"],
  # "-'":  ["SKW*T",     "'",       "",  "STROKE", "ending ' (single quote)"],
  # "\"-": ["KW-GS",     "\"",      "",  "STROKE", "starting \" (double quote)"],
  # "-\"": ["KR-GS",     "\"",      "",  "STROKE", "ending \" (double quote)"],
  # "`-":  ["TR-RL",     "`",       "",  "STROKE", "starting ` (back quote)"],
  # "-`":  ["TR*RL",     "`",       "",  "STROKE", "ending ` (back quote)"],
  # "(":   ["PREPB",     "\\(",     "",  "STROKE", "( (left parenthesis)"],
  # ")":   ["PR*EPB",    ")",       "",  "STROKE", ") (right parenthesis)"],
  # "[":   ["PWR-BGT",   "[",       "",  "STROKE", "[ (left bracket)"],
  # "]":   ["PWR*BGT",   "]",       "",  "STROKE", "] (right bracket)"],
  # "<":   ["PWRABG",    "<",       "",  "STROKE", "< (left angle bracket)"],
  # ">":   ["PWRA*BG",   ">",       "",  "STROKE", "> (right angle bracket)"],
  # "{":   ["TPR-BGT",   "{",       "",  "STROKE", "{ (left curly brace)"],
  # "}":   ["TPR*BGT",   "}",       "",  "STROKE", "} (right curly brace)"],
  # "\\":  ["SPWHRAERB", "\\",      "",  "STROKE", "\\ (backslash)"],
  # "+":   ["PHR*US",    "+",       "",  "STROKE", "+ (plus sign)"],
  # "=":   ["KWA*LS",    "=",       "",  "STROKE", "= (equals sign)"],
  # "#":   ["HAERB",     "#",       "",  "STROKE", "# (number sign)"],
  # "$":   ["TK-PL",     "$",       "",  "STROKE", "$ (dollar sign)"],
  # "%":   ["P*ERS",     "%",       "",  "STROKE", "% (percent sign)"],
  # "&":   ["A*PBD",     "&",       "",  "STROKE", "& (ampersand)"],
  # "@":   ["KWRAT",     "@",       "",  "STROKE", "@ (at symbol)"],
  # "*":   ["STA*R",     "*",       "",  "STROKE", "* (asterisk)"],
  # "_":   ["RUPBD",     "_",       "",  "STROKE", "_ (underscore)"],
  # "~":   ["T*LD",      "~",       "",  "STROKE", "~ (tilde)"],
  # "|":   ["PAO*EUP",   "|",       "",  "STROKE", "| (pipe)"],
  # "^":   ["KR-RT",     "^",       "",  "STROKE", "^ (caret)"],
  # ":":   ["STPH-FPLT", ":",       "",  "STROKE", ": (colon)"],
  # ";":   ["STPH*FPLT", ";",       "",  "STROKE", "; (semicolon)"],
  # "...": ["SKWR-RBGS", "...",     "",  "STROKE", "... (ellipsis)"],
  # "CAP": ["KPA",       "{}",      "↑", "STROKE", "capitalizes next word"],
  # " ":   ["SP-S",      "",        "",  "RARE",   "explicit space (usually in dictionary by mistake)"],

  # Główne zasady dla liczb
  "~#":  ["#",  "",    "#   #   #   #   #", "REFERENCE", "włącza tryb liczb"],
  "~1":  ["Z",  "1",   "",                  "REFERENCE", "1"],
  "~2":  ["K",  "2",   "",                  "REFERENCE", "2"],
  "~3":  ["P",  "3",   "",                  "REFERENCE", "3"],
  "~4":  ["L",  "4",   "",                  "REFERENCE", "4"],
  "~5":  ["J",  "5",   "",                  "REFERENCE", "5"],
  "~0":  ["E",  "0",   "",                  "REFERENCE", "0"],
  "~6":  ["-C", "6",   "",                  "REFERENCE", "6"],
  "~7":  ["-L", "7",   "",                  "REFERENCE", "7"],
  "~8":  ["-S", "8",   "",                  "REFERENCE", "8"],
  "~9":  ["-T", "9",   "",                  "REFERENCE", "9"],
  "~##": ["-O", "",    "x2",                "REFERENCE", "powtarza cyfrę"],
  "~#I": ["AU", "",    "#⇄#",               "REFERENCE", "odwraca kolejność dwóch cyfr"],
  "~00": ["-Y", "00",  "",                  "REFERENCE", "dodaje dwa zera"],

  # Pojedyncze cyfry
  "1":  ["", "(~1)(~#)", "", "", "liczba 1"],
  "2":  ["", "(~2)(~#)", "", "", "liczba 2"],
  "3":  ["", "(~3)(~#)", "", "", "liczba 3"],
  "4":  ["", "(~4)(~#)", "", "", "liczba 4"],
  "5":  ["", "(~5)(~#)", "", "", "liczba 5"],
  "0":  ["", "(~0)(~#)", "", "", "liczba 0"],
  "6":  ["", "(~6)(~#)", "", "", "liczba 6"],
  "7":  ["", "(~7)(~#)", "", "", "liczba 7"],
  "8":  ["", "(~8)(~#)", "", "", "liczba 8"],
  "9":  ["", "(~9)(~#)", "", "", "liczba 9"],

  # samodzielne dwie cyfry
  "12": ["", "(~1)(~2)(~#)", "", "", "liczba 12"],
  "13": ["", "(~1)(~3)(~#)", "", "", "liczba 13"],
  "14": ["", "(~1)(~4)(~#)", "", "", "liczba 14"],
  "15": ["", "(~1)(~5)(~#)", "", "", "liczba 15"],
  "10": ["", "(~1)(~0)(~#)", "", "", "liczba 10"],
  "16": ["", "(~1)(~6)(~#)", "", "", "liczba 16"],
  "17": ["", "(~1)(~7)(~#)", "", "", "liczba 17"],
  "18": ["", "(~1)(~8)(~#)", "", "", "liczba 18"],
  "19": ["", "(~1)(~9)(~#)", "", "", "liczba 19"],
  "23": ["", "(~2)(~3)(~#)", "", "", "liczba 23"],
  "24": ["", "(~2)(~4)(~#)", "", "", "liczba 24"],
  "25": ["", "(~2)(~5)(~#)", "", "", "liczba 25"],
  "20": ["", "(~2)(~0)(~#)", "", "", "liczba 20"],
  "26": ["", "(~2)(~6)(~#)", "", "", "liczba 26"],
  "27": ["", "(~2)(~7)(~#)", "", "", "liczba 27"],
  "28": ["", "(~2)(~8)(~#)", "", "", "liczba 28"],
  "29": ["", "(~2)(~9)(~#)", "", "", "liczba 29"],
  "34": ["", "(~3)(~4)(~#)", "", "", "liczba 34"],
  "35": ["", "(~3)(~5)(~#)", "", "", "liczba 35"],
  "30": ["", "(~3)(~0)(~#)", "", "", "liczba 30"],
  "36": ["", "(~3)(~6)(~#)", "", "", "liczba 36"],
  "37": ["", "(~3)(~7)(~#)", "", "", "liczba 37"],
  "38": ["", "(~3)(~8)(~#)", "", "", "liczba 38"],
  "39": ["", "(~3)(~9)(~#)", "", "", "liczba 39"],
  "45": ["", "(~4)(~5)(~#)", "", "", "liczba 45"],
  "40": ["", "(~4)(~0)(~#)", "", "", "liczba 40"],
  "46": ["", "(~4)(~6)(~#)", "", "", "liczba 46"],
  "47": ["", "(~4)(~7)(~#)", "", "", "liczba 47"],
  "48": ["", "(~4)(~8)(~#)", "", "", "liczba 48"],
  "49": ["", "(~4)(~9)(~#)", "", "", "liczba 49"],
  "50": ["", "(~5)(~0)(~#)", "", "", "liczba 50"],
  "56": ["", "(~5)(~6)(~#)", "", "", "liczba 56"],
  "57": ["", "(~5)(~7)(~#)", "", "", "liczba 57"],
  "58": ["", "(~5)(~8)(~#)", "", "", "liczba 58"],
  "59": ["", "(~5)(~9)(~#)", "", "", "liczba 59"],
  "67": ["", "(~6)(~7)(~#)", "", "", "liczba 67"],
  "68": ["", "(~6)(~8)(~#)", "", "", "liczba 68"],
  "69": ["", "(~6)(~9)(~#)", "", "", "liczba 69"],
  "78": ["", "(~7)(~8)(~#)", "", "", "liczba 78"],
  "79": ["", "(~7)(~9)(~#)", "", "", "liczba 79"],
  "89": ["", "(~8)(~9)(~#)", "", "", "liczba 89"],

  # Powtórzone dwie cyfry
  "11": ["", "(~1)(1|~##)(~#)", "", "", "liczba 11"],
  "22": ["", "(~2)(2|~##)(~#)", "", "", "liczba 22"],
  "33": ["", "(~3)(3|~##)(~#)", "", "", "liczba 33"],
  "44": ["", "(~4)(4|~##)(~#)", "", "", "liczba 44"],
  "55": ["", "(~5)(5|~##)(~#)", "", "", "liczba 55"],
  "66": ["", "(~6)(6|~##)(~#)", "", "", "liczba 66"],
  "77": ["", "(~7)(7|~##)(~#)", "", "", "liczba 77"],
  "88": ["", "(~8)(8|~##)(~#)", "", "", "liczba 88"],
  "99": ["", "(~9)(9|~##)(~#)", "", "", "liczba 99"],

  # Odwrócone dwie cyfry
  "21": ["", "(~2)(~1)(~#I)(~#)", "", "INVERSION", "liczba 21"],
  "31": ["", "(~3)(~1)(~#I)(~#)", "", "INVERSION", "liczba 31"],
  "32": ["", "(~3)(~2)(~#I)(~#)", "", "INVERSION", "liczba 32"],
  "41": ["", "(~4)(~1)(~#I)(~#)", "", "INVERSION", "liczba 41"],
  "42": ["", "(~4)(~2)(~#I)(~#)", "", "INVERSION", "liczba 42"],
  "43": ["", "(~4)(~3)(~#I)(~#)", "", "INVERSION", "liczba 43"],
  "51": ["", "(~5)(~1)(~#I)(~#)", "", "INVERSION", "liczba 51"],
  "52": ["", "(~5)(~2)(~#I)(~#)", "", "INVERSION", "liczba 52"],
  "53": ["", "(~5)(~3)(~#I)(~#)", "", "INVERSION", "liczba 53"],
  "54": ["", "(~5)(~4)(~#I)(~#)", "", "INVERSION", "liczba 54"],
  "61": ["", "(~6)(~1)(~#I)(~#)", "", "INVERSION", "liczba 61"],
  "62": ["", "(~6)(~2)(~#I)(~#)", "", "INVERSION", "liczba 62"],
  "63": ["", "(~6)(~3)(~#I)(~#)", "", "INVERSION", "liczba 63"],
  "64": ["", "(~6)(~4)(~#I)(~#)", "", "INVERSION", "liczba 64"],
  "65": ["", "(~6)(~5)(~#I)(~#)", "", "INVERSION", "liczba 65"],
  "60": ["", "(~6)(~0)(~#I)(~#)", "", "INVERSION", "liczba 60"],
  "71": ["", "(~7)(~1)(~#I)(~#)", "", "INVERSION", "liczba 71"],
  "72": ["", "(~7)(~2)(~#I)(~#)", "", "INVERSION", "liczba 72"],
  "73": ["", "(~7)(~3)(~#I)(~#)", "", "INVERSION", "liczba 73"],
  "74": ["", "(~7)(~4)(~#I)(~#)", "", "INVERSION", "liczba 74"],
  "75": ["", "(~7)(~5)(~#I)(~#)", "", "INVERSION", "liczba 75"],
  "70": ["", "(~7)(~0)(~#I)(~#)", "", "INVERSION", "liczba 70"],
  "76": ["", "(~7)(~6)(~#I)(~#)", "", "INVERSION", "liczba 76"],
  "81": ["", "(~8)(~1)(~#I)(~#)", "", "INVERSION", "liczba 81"],
  "82": ["", "(~8)(~2)(~#I)(~#)", "", "INVERSION", "liczba 82"],
  "83": ["", "(~8)(~3)(~#I)(~#)", "", "INVERSION", "liczba 83"],
  "84": ["", "(~8)(~4)(~#I)(~#)", "", "INVERSION", "liczba 84"],
  "85": ["", "(~8)(~5)(~#I)(~#)", "", "INVERSION", "liczba 85"],
  "80": ["", "(~8)(~0)(~#I)(~#)", "", "INVERSION", "liczba 80"],
  "86": ["", "(~8)(~6)(~#I)(~#)", "", "INVERSION", "liczba 86"],
  "87": ["", "(~8)(~7)(~#I)(~#)", "", "INVERSION", "liczba 87"],
  "91": ["", "(~9)(~1)(~#I)(~#)", "", "INVERSION", "liczba 91"],
  "92": ["", "(~9)(~2)(~#I)(~#)", "", "INVERSION", "liczba 92"],
  "93": ["", "(~9)(~3)(~#I)(~#)", "", "INVERSION", "liczba 93"],
  "94": ["", "(~9)(~4)(~#I)(~#)", "", "INVERSION", "liczba 94"],
  "95": ["", "(~9)(~5)(~#I)(~#)", "", "INVERSION", "liczba 95"],
  "90": ["", "(~9)(~0)(~#I)(~#)", "", "INVERSION", "liczba 90"],
  "96": ["", "(~9)(~6)(~#I)(~#)", "", "INVERSION", "liczba 96"],
  "97": ["", "(~9)(~7)(~#I)(~#)", "", "INVERSION", "liczba 97"],
  "98": ["", "(~9)(~8)(~#I)(~#)", "", "INVERSION", "liczba 98"],

  # Setki
  "100": ["", "(~1)(~00)(~#)", "", "", "liczba 100"],
  "200": ["", "(~2)(~00)(~#)", "", "", "liczba 200"],
  "300": ["", "(~3)(~00)(~#)", "", "", "liczba 300"],
  "400": ["", "(~4)(~00)(~#)", "", "", "liczba 400"],
  "500": ["", "(~5)(~00)(~#)", "", "", "liczba 500"],
  "600": ["", "(~6)(~00)(~#)", "", "", "liczba 600"],
  "700": ["", "(~7)(~00)(~#)", "", "", "liczba 700"],
  "800": ["", "(~8)(~00)(~#)", "", "", "liczba 800"],
  "900": ["", "(~9)(~00)(~#)", "", "", "liczba 900"],

  # Ułamki
  "1/2": ["", "(~1)(/)(~2)(~#)", "", "", "ułamek - 1/2"],
  "1/3": ["", "(~1)(/)(~3)(~#)", "", "", "ułamek - 1/3"],
  "1/4": ["", "(~1)(/)(~4)(~#)", "", "", "ułamek - 1/4"],
  "1/5": ["", "(~1)(/)(~5)(~#)", "", "", "ułamek - 1/5"],
  "1/6": ["", "(~1)(/)(~6)(~#)", "", "", "ułamek - 1/6"],
  "1/7": ["", "(~1)(/)(~7)(~#)", "", "", "ułamek - 1/7"],
  "1/8": ["", "(~1)(/)(~8)(~#)", "", "", "ułamek - 1/8"],
  "1/9": ["", "(~1)(/)(~9)(~#)", "", "", "ułamek - 1/9"],
  "2/3": ["", "(~2)(/)(~3)(~#)", "", "", "ułamek - 2/3"],
  "3/4": ["", "(~3)(/)(~4)(~#)", "", "", "ułamek - 3/4"],
  "4/5": ["", "(~4)(/)(~5)(~#)", "", "", "ułamek - 4/5"],
  "5/6": ["", "(~5)(/)(~6)(~#)", "", "", "ułamek - 5/6"],
  "6/7": ["", "(~6)(/)(~7)(~#)", "", "", "ułamek - 6/7"],
  "7/8": ["", "(~7)(/)(~8)(~#)", "", "", "ułamek - 7/8"],
  "8/9": ["", "(~8)(/)(~9)(~#)", "", "", "ułamek - 8/9"]
}
